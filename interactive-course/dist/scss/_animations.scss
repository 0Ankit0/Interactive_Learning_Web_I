// Comprehensive Animation System
// Modern SASS with keyframes, transitions, and interactive animations

@use 'sass:map';
@use 'sass:math';
@use 'variables/index' as *;
@use 'mixins' as *;

// ========================================
// ANIMATION VARIABLES
// ========================================

// Easing functions
$ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53) !default;
$ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19) !default;
$ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22) !default;
$ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06) !default;
$ease-in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035) !default;
$ease-in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335) !default;

$ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94) !default;
$ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1) !default;
$ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1) !default;
$ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1) !default;
$ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1) !default;
$ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1) !default;

$ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955) !default;
$ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1) !default;
$ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1) !default;
$ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1) !default;
$ease-in-out-expo: cubic-bezier(1, 0, 0, 1) !default;
$ease-in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86) !default;

// Animation duration map
$animation-durations: map.get($animation-duration, fast) map.get($animation-duration, base) map.get($animation-duration, slow) map.get($animation-duration, slower) !default;

// ========================================
// CORE KEYFRAME ANIMATIONS
// ========================================

// Fade animations
@include keyframes(fadeIn) {
  from { opacity: 0; }
  to { opacity: 1; }
}

@include keyframes(fadeOut) {
  from { opacity: 1; }
  to { opacity: 0; }
}

@include keyframes(fadeInUp) {
  from {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@include keyframes(fadeInDown) {
  from {
    opacity: 0;
    transform: translate3d(0, -100%, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@include keyframes(fadeInLeft) {
  from {
    opacity: 0;
    transform: translate3d(-100%, 0, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@include keyframes(fadeInRight) {
  from {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

// Slide animations
@include keyframes(slideInUp) {
  from {
    transform: translate3d(0, 100%, 0);
    visibility: visible;
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@include keyframes(slideInDown) {
  from {
    transform: translate3d(0, -100%, 0);
    visibility: visible;
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@include keyframes(slideInLeft) {
  from {
    transform: translate3d(-100%, 0, 0);
    visibility: visible;
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@include keyframes(slideInRight) {
  from {
    transform: translate3d(100%, 0, 0);
    visibility: visible;
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

// Scale animations
@include keyframes(zoomIn) {
  from {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }
  50% {
    opacity: 1;
  }
}

@include keyframes(zoomOut) {
  from {
    opacity: 1;
  }
  50% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }
  to {
    opacity: 0;
  }
}

@include keyframes(zoomInUp) {
  from {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);
    animation-timing-function: $ease-in-circ;
  }
  60% {
    opacity: 1;
    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);
    animation-timing-function: $ease-out-circ;
  }
}

// Bounce animations
@include keyframes(bounce) {
  from, 20%, 53%, 80%, to {
    animation-timing-function: $ease-out-cubic;
    transform: translate3d(0, 0, 0);
  }
  40%, 43% {
    animation-timing-function: $ease-in-cubic;
    transform: translate3d(0, -30px, 0);
  }
  70% {
    animation-timing-function: $ease-in-cubic;
    transform: translate3d(0, -15px, 0);
  }
  90% {
    transform: translate3d(0, -4px, 0);
  }
}

@include keyframes(bounceIn) {
  from, 20%, 40%, 60%, 80%, to {
    animation-timing-function: $ease-out-cubic;
  }
  0% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }
  20% {
    transform: scale3d(1.1, 1.1, 1.1);
  }
  40% {
    transform: scale3d(0.9, 0.9, 0.9);
  }
  60% {
    opacity: 1;
    transform: scale3d(1.03, 1.03, 1.03);
  }
  80% {
    transform: scale3d(0.97, 0.97, 0.97);
  }
  to {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}

// Pulse animations
@include keyframes(pulse) {
  from {
    transform: scale3d(1, 1, 1);
  }
  50% {
    transform: scale3d(1.05, 1.05, 1.05);
  }
  to {
    transform: scale3d(1, 1, 1);
  }
}

@include keyframes(heartBeat) {
  0% {
    transform: scale(1);
  }
  14% {
    transform: scale(1.3);
  }
  28% {
    transform: scale(1);
  }
  42% {
    transform: scale(1.3);
  }
  70% {
    transform: scale(1);
  }
}

// Shake animations
@include keyframes(shake) {
  from, to {
    transform: translate3d(0, 0, 0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translate3d(-10px, 0, 0);
  }
  20%, 40%, 60%, 80% {
    transform: translate3d(10px, 0, 0);
  }
}

@include keyframes(wobble) {
  from {
    transform: translate3d(0, 0, 0);
  }
  15% {
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
  }
  30% {
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
  }
  45% {
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
  }
  60% {
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
  }
  75% {
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

// Flip animations
@include keyframes(flip) {
  from {
    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, -360deg);
    animation-timing-function: ease-out;
  }
  40% {
    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg);
    animation-timing-function: ease-out;
  }
  50% {
    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg);
    animation-timing-function: ease-in;
  }
  80% {
    transform: perspective(400px) scale3d(0.95, 0.95, 0.95) translate3d(0, 0, 0) rotate3d(0, 1, 0, 0deg);
    animation-timing-function: ease-in;
  }
  to {
    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, 0deg);
    animation-timing-function: ease-in;
  }
}

// Rotation animations
@include keyframes(rotateIn) {
  from {
    transform-origin: center;
    transform: rotate3d(0, 0, 1, -200deg);
    opacity: 0;
  }
  to {
    transform-origin: center;
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}

@include keyframes(rotateOut) {
  from {
    transform-origin: center;
    opacity: 1;
  }
  to {
    transform-origin: center;
    transform: rotate3d(0, 0, 1, 200deg);
    opacity: 0;
  }
}

// Special effects
@include keyframes(flash) {
  from, 50%, to {
    opacity: 1;
  }
  25%, 75% {
    opacity: 0;
  }
}

@include keyframes(hinge) {
  0% {
    transform-origin: top left;
    animation-timing-function: ease-in-out;
  }
  20%, 60% {
    transform: rotate3d(0, 0, 1, 80deg);
    transform-origin: top left;
    animation-timing-function: ease-in-out;
  }
  40%, 80% {
    transform: rotate3d(0, 0, 1, 60deg);
    transform-origin: top left;
    animation-timing-function: ease-in-out;
    opacity: 1;
  }
  to {
    transform: translate3d(0, 700px, 0);
    opacity: 0;
  }
}

// Loading animations
@include keyframes(spinner) {
  to {
    transform: rotate(360deg);
  }
}

@include keyframes(ripple) {
  0% {
    top: 36px;
    left: 36px;
    width: 0;
    height: 0;
    opacity: 1;
  }
  100% {
    top: 0px;
    left: 0px;
    width: 72px;
    height: 72px;
    opacity: 0;
  }
}

// ========================================
// ANIMATION CLASSES
// ========================================

// Base animation class
.animated {
  animation-duration: 1s;
  animation-fill-mode: both;
}

// Duration modifiers
.animate-fast { animation-duration: map.get($animation-duration, fast) !important; }
.animate-slow { animation-duration: map.get($animation-duration, slow) !important; }
.animate-slower { animation-duration: map.get($animation-duration, slower) !important; }

// Delay modifiers
@for $i from 1 through 5 {
  .animate-delay-#{$i} {
    animation-delay: #{$i * 0.1}s !important;
  }
}

// Iteration modifiers
.animate-repeat-1 { animation-iteration-count: 1 !important; }
.animate-repeat-2 { animation-iteration-count: 2 !important; }
.animate-repeat-3 { animation-iteration-count: 3 !important; }
.animate-infinite { animation-iteration-count: infinite !important; }

// Animation classes
.fadeIn { animation-name: fadeIn; }
.fadeOut { animation-name: fadeOut; }
.fadeInUp { animation-name: fadeInUp; }
.fadeInDown { animation-name: fadeInDown; }
.fadeInLeft { animation-name: fadeInLeft; }
.fadeInRight { animation-name: fadeInRight; }

.slideInUp { animation-name: slideInUp; }
.slideInDown { animation-name: slideInDown; }
.slideInLeft { animation-name: slideInLeft; }
.slideInRight { animation-name: slideInRight; }

.zoomIn { animation-name: zoomIn; }
.zoomOut { animation-name: zoomOut; }
.zoomInUp { animation-name: zoomInUp; }

.bounce { animation-name: bounce; transform-origin: center bottom; }
.bounceIn { animation-name: bounceIn; }

.pulse { animation-name: pulse; }
.heartBeat { animation-name: heartBeat; animation-duration: 1.3s; animation-timing-function: ease-in-out; }

.shake { animation-name: shake; }
.wobble { animation-name: wobble; }

.flip { animation-name: flip; backface-visibility: visible; }
.rotateIn { animation-name: rotateIn; }
.rotateOut { animation-name: rotateOut; }

.flash { animation-name: flash; }
.hinge { animation-name: hinge; animation-duration: 2s; }

// Loading animations
.spinner {
  animation: spinner 1s linear infinite;
}

.ripple {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
  
  div {
    position: absolute;
    border: 4px solid theme-color("primary");
    opacity: 1;
    border-radius: 50%;
    animation: ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;
  }
  
  div:nth-child(2) {
    animation-delay: -0.5s;
  }
}

// ========================================
// HOVER ANIMATIONS
// ========================================

.hover-grow {
  @include transition(transform map.get($animation-duration, fast) $ease-out-cubic);
  
  &:hover {
    transform: scale(1.05);
  }
}

.hover-shrink {
  @include transition(transform map.get($animation-duration, fast) $ease-out-cubic);
  
  &:hover {
    transform: scale(0.95);
  }
}

.hover-float {
  @include transition(transform map.get($animation-duration, base) $ease-out-cubic);
  
  &:hover {
    transform: translateY(-5px);
  }
}

.hover-sink {
  @include transition(transform map.get($animation-duration, base) $ease-out-cubic);
  
  &:hover {
    transform: translateY(5px);
  }
}

.hover-rotate {
  @include transition(transform map.get($animation-duration, base) $ease-out-cubic);
  
  &:hover {
    transform: rotate(5deg);
  }
}

.hover-skew {
  @include transition(transform map.get($animation-duration, base) $ease-out-cubic);
  
  &:hover {
    transform: skew(-10deg);
  }
}

.hover-wobble-horizontal {
  @include transition(transform map.get($animation-duration, base) $ease-out-cubic);
  
  &:hover {
    animation: wobble 0.8s ease-in-out;
  }
}

.hover-buzz {
  @include transition(transform map.get($animation-duration, fast) $ease-out-cubic);
  
  &:hover {
    animation: shake 0.5s ease-in-out;
  }
}

// ========================================
// INTERACTIVE COURSE ANIMATIONS
// ========================================

// Demo container animations
.demo-appear {
  @include animation(fadeInUp map.get($animation-duration, base) $ease-out-cubic);
}

.demo-item-pop {
  @include animation(bounceIn map.get($animation-duration, base) $ease-out-cubic);
}

// Code block animations
.code-highlight {
  @include transition(all map.get($animation-duration, fast) ease);
  
  &:hover {
    box-shadow: 0 0 20px rgba(theme-color("primary"), 0.3);
  }
}

// Progress animations
.progress-fill {
  @include transition(width map.get($animation-duration, slow) $ease-out-cubic);
}

// Quiz animations
.quiz-option {
  @include transition(all map.get($animation-duration, fast) ease);
  
  &.correct {
    @include animation(pulse map.get($animation-duration, base) ease-in-out 2);
  }
  
  &.incorrect {
    @include animation(shake map.get($animation-duration, fast) ease-in-out);
  }
}

// Navigation animations
.nav-item {
  @include transition(transform map.get($animation-duration, fast) $ease-out-cubic);
  
  &:hover {
    transform: translateY(-2px);
  }
}

// Card animations
.card-interactive {
  @include transition(all map.get($animation-duration, base) $ease-out-cubic);
  
  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba($black, 0.15);
  }
}

// Button animations
.btn-animated {
  @include transition(all map.get($animation-duration, fast) $ease-out-cubic);
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba($white, 0.2), transparent);
    @include transition(left map.get($animation-duration, base) ease);
  }
  
  &:hover::before {
    left: 100%;
  }
  
  &:active {
    transform: scale(0.98);
  }
}

// ========================================
// SCROLL ANIMATIONS
// ========================================

// Scroll reveal animations (requires JavaScript)
.scroll-reveal {
  opacity: 0;
  transform: translateY(50px);
  @include transition(all map.get($animation-duration, base) $ease-out-cubic);
  
  &.revealed {
    opacity: 1;
    transform: translateY(0);
  }
}

.scroll-reveal-left {
  opacity: 0;
  transform: translateX(-50px);
  @include transition(all map.get($animation-duration, base) $ease-out-cubic);
  
  &.revealed {
    opacity: 1;
    transform: translateX(0);
  }
}

.scroll-reveal-right {
  opacity: 0;
  transform: translateX(50px);
  @include transition(all map.get($animation-duration, base) $ease-out-cubic);
  
  &.revealed {
    opacity: 1;
    transform: translateX(0);
  }
}

// ========================================
// REDUCED MOTION SUPPORT
// ========================================

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  .animated {
    animation: none;
  }
}