@use '../variables/index' as *;
@use '../mixins' as *;
@use 'sass:map';
@use 'sass:color';

// Form Builder Component
.form-builder {
  margin: $spacing-lg 0;

  .form-builder-container {
    @include grid-two-columns($spacing-lg);
    margin-top: $spacing-lg;

    .form-side {
      h4 {
        margin-top: 0;
        margin-bottom: $spacing-base;
        color: $text-secondary;
      }

      .form-controls {
        .control-group {
          margin-bottom: $spacing-lg;

          label {
            display: block;
            margin-bottom: $spacing-sm;
            font-weight: $font-weight-medium;
            color: $text-primary;
          }

          input, select, textarea {
            width: 100%;
            padding: $spacing-base;
            border: 2px solid $border-light;
            border-radius: map.get($border-radius-scale, md);
            font-size: $font-size-base;

            &:focus {
              outline: none;
              border-color: $accent-primary;
              box-shadow: focus-ring($accent-primary);
            }
          }

          textarea {
            resize: vertical;
            min-height: 100px;
          }
        }

        .form-button {
          background: $accent-primary;
          color: $text-primary;
          border: none;
          padding: $spacing-sm $spacing-lg;
          border-radius: map.get($border-radius-scale, md);
          font-weight: $font-weight-bold;
          cursor: pointer;
          transition: background-color $transition-fast;

          &:hover {
            background: color.adjust($accent-primary, $lightness: -10%);
          }
        }
      }
    }

    .form-preview {
      h4 {
        margin-top: 0;
        margin-bottom: $spacing-base;
        color: $text-secondary;
      }

      .preview-form {
        border: 2px solid $border-light;
        border-radius: map.get($border-radius-scale, md);
        padding: $spacing-xl;
        background: $bg-primary;
        min-height: 300px;
      }
    }
  }
}

// Table Builder Component
.table-builder {
  margin: $spacing-lg 0;

  .table-builder-container {
    @include grid-two-columns($spacing-lg);
    margin-top: $spacing-lg;

    .table-side {
      h4 {
        margin-top: 0;
        margin-bottom: $spacing-base;
        color: $text-secondary;
      }

      .table-controls {
        .control-group {
          margin-bottom: $spacing-lg;

          label {
            display: block;
            margin-bottom: $spacing-sm;
            font-weight: $font-weight-medium;
            color: $text-primary;
          }

          input {
            width: 100%;
            padding: $spacing-base;
            border: 2px solid $border-light;
            border-radius: map.get($border-radius-scale, md);
            font-size: $font-size-base;

            &:focus {
              outline: none;
              border-color: $accent-primary;
              box-shadow: focus-ring($accent-primary);
            }
          }
        }

        .table-button {
          background: $accent-primary;
          color: $text-primary;
          border: none;
          padding: $spacing-sm $spacing-lg;
          border-radius: map.get($border-radius-scale, md);
          font-weight: $font-weight-bold;
          cursor: pointer;
          transition: background-color $transition-fast;

          &:hover {
            background: color.adjust($accent-primary, $lightness: -10%);
          }
        }
      }
    }

    .table-preview {
      h4 {
        margin-top: 0;
        margin-bottom: $spacing-base;
        color: $text-secondary;
      }

      .preview-table {
        border: 2px solid $border-light;
        border-radius: map.get($border-radius-scale, md);
        padding: $spacing-xl;
        background: $bg-primary;
        min-height: 300px;
        overflow: auto;

        table {
          width: 100%;
          border-collapse: collapse;

          th, td {
            padding: $spacing-base;
            border: 1px solid $border-light;
            text-align: left;
          }

          th {
            background: $bg-secondary;
            font-weight: $font-weight-bold;
          }
        }
      }
    }
  }
}

// Form Validation Component
.form-validation {
  margin: $spacing-lg 0;

  .validation-container {
    @include grid-two-columns($spacing-lg);
    margin-top: $spacing-lg;

    .form-side {
      h4 {
        margin-top: 0;
        margin-bottom: $spacing-base;
        color: $text-secondary;
      }

      .validation-form {
        .form-group {
          margin-bottom: $spacing-lg;

          label {
            display: block;
            margin-bottom: $spacing-sm;
            font-weight: $font-weight-medium;
            color: $text-primary;
          }

          input {
            width: 100%;
            padding: $spacing-base;
            border: 2px solid $border-light;
            border-radius: map.get($border-radius-scale, md);
            font-size: $font-size-base;

            &:focus {
              outline: none;
              border-color: $accent-primary;
              box-shadow: focus-ring($accent-primary);
            }

            &.invalid {
              border-color: $danger;
            }
          }

          .error-message {
            color: $danger;
            font-size: $font-size-sm;
            margin-top: $spacing-xs;
            display: none;

            &.visible {
              display: block;
            }
          }
        }

        .submit-button {
          background: $accent-primary;
          color: $text-primary;
          border: none;
          padding: $spacing-sm $spacing-lg;
          border-radius: map.get($border-radius-scale, md);
          font-weight: $font-weight-bold;
          cursor: pointer;
          transition: background-color $transition-fast;

          &:hover {
            background: color.adjust($accent-primary, $lightness: -10%);
          }
        }
      }
    }

    .validation-results {
      h4 {
        margin-top: 0;
        margin-bottom: $spacing-base;
        color: $text-secondary;
      }

      .results-display {
        border: 2px solid $border-light;
        border-radius: map.get($border-radius-scale, md);
        padding: $spacing-xl;
        background: $bg-primary;
        min-height: 300px;
        overflow: auto;

        .result-item {
          padding: $spacing-base;
          margin: $spacing-sm 0;
          border-radius: map.get($border-radius-scale, sm);
          background: $bg-secondary;
          border: 1px solid $border-light;

          &.valid {
            background: $success;
            color: $text-primary;
          }

          &.invalid {
            background: $danger;
            color: $text-primary;
          }
        }
      }
    }
  }
}
