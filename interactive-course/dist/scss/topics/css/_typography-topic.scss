/* Typography Topic Styles */
.typography-topic {
  .hero {
    @extend .hero-section;
    background: map-get($demo-gradients, 'dark-tech');
    
    .hero-content {
      @include hero-grid();
    }

    .hero-text {
      h1 {
        @include hero-title();
        i {
          color: map-get($demo-colors, 'accent-gold');
          @extend .mr-3;
        }
      }

      .hero-description {
        @include hero-description();
      }

      .hero-features {
        @include feature-tags();
      }
    }

    .hero-visual {
      .typography-showcase {
        @include glass-card(rgba(255,255,255,0.1));
        padding: map-get($spacing-map, 'lg');

        .font-samples {
          @include flex-column();
          gap: map-get($spacing-map, 'md');

          .sample {
            @include interactive-card();
            text-align: center;
            font-size: 1.8rem;
            font-weight: 500;
            
            &.serif {
              font-family: map-get($font-map, 'serif');
            }

            &.sans-serif {
              font-family: map-get($font-map, 'sans-serif');
            }

            &.monospace {
              font-family: map-get($font-map, 'monospace');
            }

            &.script {
              font-family: map-get($font-map, 'serif');
              font-style: italic;
            }
          }
        }
      }
    }
  }

  // Font Categories Section
  .font-categories {
    @include grid-auto-fit(280px);
    gap: map-get($spacing-map, 'lg');
    margin-top: map-get($spacing-map, 'lg');
  }

  .category-card {
    @extend .card;
    @include interactive-hover();

    @each $category, $color in (
      'serif': map-get($demo-colors, 'primary'),
      'sans-serif': map-get($demo-colors, 'info'),
      'monospace': map-get($demo-colors, 'success'),
      'display': map-get($demo-colors, 'warning')
    ) {
      &.#{$category}-category:hover {
        border-color: $color;
      }
    }

    .category-header {
      text-align: center;
      margin-bottom: map-get($spacing-map, 'md');

      h3 {
        @include section-title();
      }

      .category-sample {
        font-size: 2.5rem;
        font-weight: 600;
        color: map-get($color-palette, 'gray-600');
        margin-bottom: map-get($spacing-map, 'sm');
      }
    }

    .category-description {
      p {
        @include text-muted();
        margin-bottom: map-get($spacing-map, 'sm');
      }

      .use-cases,
      .examples {
        margin-bottom: map-get($spacing-map, 'sm');
        font-size: 0.9rem;

        strong {
          color: map-get($color-palette, 'gray-800');
        }
      }
    }
  }

  // Typography Principles Section
  .principles-demo {
    @include grid-auto-fit(400px);
    gap: map-get($spacing-map, 'lg');
    margin-top: map-get($spacing-map, 'lg');
  }

  .principle-card {
    @extend .card;

    h3 {
      @include section-title();
      display: flex;
      align-items: center;
      gap: map-get($spacing-map, 'xs');

      &::before {
        content: '';
        width: 4px;
        height: 24px;
        background: map-get($demo-gradients, 'primary-purple');
        border-radius: 2px;
      }
    }

    .hierarchy-demo {
      @include demo-container();
      margin-bottom: map-get($spacing-map, 'md');

      @each $element, $size in (
        'h1': 2.5rem,
        'h2': 2rem,
        'h3': 1.5rem,
        'p': 1rem,
        'small': 0.875rem
      ) {
        .demo-#{$element} {
          font-size: $size;
          color: map-get($color-palette, 'gray-800');
          margin-bottom: if($element == 'h1', map-get($spacing-map, 'sm'), 
                         if($element == 'h2', map-get($spacing-map, 'xs'), 
                         if($element == 'h3', map-get($spacing-map, 'xs'), 
                         if($element == 'p', map-get($spacing-map, 'sm'), 0))));
          line-height: map-get($line-height-map, if($element == 'h1' or $element == 'h2' or $element == 'h3', 'tight', 'normal'));
          font-weight: if($element == 'h1', 700, if($element == 'h2', 600, if($element == 'h3', 500, 400)));
          transition: font-size $transition-duration ease;
        }
      }
    }

    .spacing-demo {
      @include demo-container();
      margin-bottom: map-get($spacing-map, 'md');
      transition: line-height $transition-duration ease;

      p {
        margin-bottom: map-get($spacing-map, 'sm');
        color: map-get($color-palette, 'gray-800');
      }
    }

    .weight-demo,
    .style-demo {
      @include demo-container();
      margin-bottom: map-get($spacing-map, 'sm');

      p {
        margin-bottom: map-get($spacing-map, 'xs');
        color: map-get($color-palette, 'gray-800');

        &.weight-300 { font-weight: 300; }
        &.weight-400 { font-weight: 400; }
        &.weight-500 { font-weight: 500; }
        &.weight-600 { font-weight: 600; }
        &.weight-700 { font-weight: 700; }

        &.style-normal { font-style: normal; }
        &.style-italic { font-style: italic; }
        &.style-underline { text-decoration: underline; }
      }
    }

    .controls {
      @include control-group();
    }
  }

  // Font Pairing Tool
  .font-pairing-tool {
    @extend .card;
    overflow: hidden;
  }

  .pairing-controls {
    @include control-panel();

    .font-selector {
      flex: 1;
      min-width: 200px;

      label {
        @include form-label();
      }

      select {
        @include form-select();
      }
    }

    .randomize-btn {
      @include btn-primary();
      display: flex;
      align-items: center;
      gap: map-get($spacing-map, 'xs');

      &:hover {
        transform: translateY(-2px);
      }

      i {
        transition: transform $transition-duration ease;
      }
    }
  }

  .pairing-preview {
    padding: map-get($spacing-map, 'xl');
    background: white;

    .preview-heading {
      font-size: 3rem;
      font-weight: 700;
      color: map-get($color-palette, 'gray-800');
      margin-bottom: map-get($spacing-map, 'sm');
      line-height: map-get($line-height-map, 'tight');
      transition: font-family $transition-duration ease;
    }

    .preview-subheading {
      font-size: 2rem;
      font-weight: 600;
      color: map-get($color-palette, 'gray-600');
      margin-bottom: map-get($spacing-map, 'lg');
      line-height: map-get($line-height-map, 'snug');
      transition: font-family $transition-duration ease;
    }

    .preview-body {
      font-size: 1.1rem;
      line-height: map-get($line-height-map, 'relaxed');
      color: map-get($color-palette, 'gray-800');
      margin-bottom: map-get($spacing-map, 'md');
      transition: font-family $transition-duration ease;
    }
  }

  // Readability Tester
  .readability-tester {
    @include three-column-layout(300px, 1fr, 250px);
    @extend .card;
    overflow: hidden;
    min-height: 500px;

    @media (max-width: 1200px) {
      grid-template-columns: 1fr;
    }

    .test-controls {
      @include sidebar-panel();

      h4 {
        @include sidebar-title();
      }

      .control-group {
        @include control-group();

        label {
          @include control-label();
        }

        input[type="range"] {
          @include range-input();
        }

        select {
          @include form-select();
        }
      }
    }

    .test-content {
      padding: map-get($spacing-map, 'lg');
      transition: all $transition-duration ease;

      h3 {
        margin-bottom: map-get($spacing-map, 'md');
        color: inherit;
      }

      p {
        margin-bottom: map-get($spacing-map, 'sm');
        color: inherit;
      }
    }

    .readability-score {
      @include sidebar-panel();

      h4 {
        @include sidebar-title();
      }

      .score-display {
        @include score-display();

        .score {
          display: block;
          font-size: 3rem;
          font-weight: 700;
          color: map-get($color-palette, 'gray-800');
          line-height: 1;
        }

        .label {
          display: block;
          font-size: 1rem;
          font-weight: 600;
          margin-top: map-get($spacing-map, 'xs');

          @each $rating, $color in (
            'excellent': map-get($demo-colors, 'success'),
            'very-good': #059669,
            'good': map-get($demo-colors, 'info'),
            'fair': map-get($demo-colors, 'warning'),
            'poor': map-get($demo-colors, 'danger')
          ) {
            &.#{$rating} { color: $color; }
          }
        }
      }

      .score-factors {
        .factor {
          @include score-factor();

          .factor-name {
            @include text-muted();
            font-weight: 500;
          }

          .factor-score {
            @include score-badge();
          }
        }
      }
    }
  }
}

// Additional utility classes for font demonstrations
.font-demo {
  .serif-demo {
    font-family: map-get($font-map, 'serif');
  }

  .sans-serif-demo {
    font-family: map-get($font-map, 'sans-serif');
  }

  .monospace-demo {
    font-family: map-get($font-map, 'monospace');
  }
}

// Animations for typography interactions
@keyframes fontChange {
  0% { opacity: 0.8; }
  50% { opacity: 1; transform: scale(1.02); }
  100% { opacity: 1; transform: scale(1); }
}

.font-transition {
  animation: fontChange 0.5s ease;
}
