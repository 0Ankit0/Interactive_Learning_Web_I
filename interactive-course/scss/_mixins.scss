// Mixins for the Web Technology I Interactive Course
@use 'variables' as *;

// Media query mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-sm - 1px}) { @content; }
  }
  @if $breakpoint == sm {
    @media (min-width: #{$breakpoint-sm}) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: #{$breakpoint-md}) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: #{$breakpoint-lg}) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: #{$breakpoint-xl}) { @content; }
  }
  @if $breakpoint == xxl {
    @media (min-width: #{$breakpoint-xxl}) { @content; }
  }
}

// Custom breakpoint mixin
@mixin breakpoint($size) {
  @media (max-width: #{$size}) {
    @content;
  }
}

// Flexbox mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-wrap {
  display: flex;
  flex-wrap: wrap;
}

// Grid mixins
@mixin grid-auto-fit($min-width: 250px, $gap: $spacing-lg) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
}

@mixin grid-auto-fill($min-width: 250px, $gap: $spacing-lg) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $gap;
}

// Card mixins
@mixin card-base {
  background: $bg-primary;
  border-radius: $border-radius-xl;
  box-shadow: $shadow-lg;
  padding: $spacing-3xl;
  transition: all $transition-base;
}

@mixin card-hover {
  transform: translateY(-5px);
  box-shadow: $shadow-xl;
}

// Button mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-md $spacing-2xl;
  border: none;
  border-radius: $border-radius-md;
  font-weight: $font-weight-semibold;
  font-size: $font-size-sm;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-base;
  user-select: none;
  
  &:focus {
    outline: none;
    box-shadow: $focus-ring;
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
}

@mixin button-primary {
  @include button-base;
  background: $gradient-primary;
  color: white;
  
  &:hover:not(:disabled) {
    background: linear-gradient(135deg, $primary-hover, $primary-dark);
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba($primary-color, 0.3);
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

@mixin button-secondary {
  @include button-base;
  background: $bg-secondary;
  color: $text-primary;
  border: 2px solid $border-light;
  
  &:hover:not(:disabled) {
    background: $bg-light;
    border-color: $primary-color;
    transform: translateY(-2px);
  }
}

@mixin button-outline {
  @include button-base;
  background: transparent;
  color: $primary-color;
  border: 2px solid $primary-color;
  
  &:hover:not(:disabled) {
    background: $primary-color;
    color: white;
    transform: translateY(-2px);
  }
}

// Input mixins
@mixin input-base {
  padding: $spacing-lg;
  border: 2px solid $border-light;
  border-radius: $border-radius-md;
  font-size: $font-size-sm;
  transition: border-color $transition-base;
  background: $bg-primary;
  
  &:focus {
    outline: none;
    border-color: $primary-color;
    box-shadow: $focus-ring;
  }
  
  &::placeholder {
    color: $text-secondary;
  }
}

// Animation mixins
@mixin fade-in($duration: $animation-duration-base) {
  opacity: 0;
  animation: fadeIn $duration ease forwards;
}

@mixin slide-in-up($duration: $animation-duration-base, $distance: 20px) {
  opacity: 0;
  transform: translateY($distance);
  animation: slideInUp $duration ease forwards;
}

@mixin slide-in-left($duration: $animation-duration-base, $distance: 20px) {
  opacity: 0;
  transform: translateX(-$distance);
  animation: slideInLeft $duration ease forwards;
}

@mixin pulse($duration: 2s) {
  animation: pulse $duration infinite;
}

@mixin bounce($duration: 1s) {
  animation: bounce $duration infinite;
}

// Text mixins
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 3) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Layout mixins
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin full-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

// Utility mixins
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// Progress bar mixin
@mixin progress-bar($height: 8px, $bg-color: $bg-light, $fill-color: $primary-color) {
  height: $height;
  background: $bg-color;
  border-radius: $border-radius-sm;
  overflow: hidden;
  position: relative;
  
  .progress-fill {
    height: 100%;
    background: $fill-color;
    border-radius: $border-radius-sm;
    width: 0%;
    transition: width $transition-base;
    position: relative;
    
    &::after {
      content: '';
      @include full-overlay;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
      animation: shimmer 2s infinite;
    }
  }
}

// Code block mixin
@mixin code-block {
  background: $bg-dark;
  color: $text-light;
  padding: $spacing-xl;
  border-radius: $border-radius-md;
  font-family: $font-family-monospace;
  font-size: $font-size-sm;
  line-height: $line-height-normal;
  white-space: pre-wrap;
  overflow-x: auto;
  border-left: 4px solid $primary-color;
}

// Interactive element mixins
@mixin interactive-hover {
  transition: all $transition-base;
  cursor: pointer;
  
  &:hover {
    transform: translateY(-3px);
    box-shadow: $shadow-lg;
  }
  
  &:active {
    transform: translateY(-1px);
  }
}

@mixin drag-element {
  cursor: grab;
  user-select: none;
  transition: all $transition-base;
  
  &:hover {
    transform: translateY(-3px);
    box-shadow: $shadow-lg;
  }
  
  &:active {
    cursor: grabbing;
    transform: scale($active-scale);
  }
}

// Status indicator mixin
@mixin status-indicator($color) {
  @include flex-center;
  gap: $spacing-sm;
  font-weight: $font-weight-semibold;
  color: $color;
  
  i {
    animation: blink 2s infinite;
  }
}

// Tab mixin
@mixin tab-container {
  @include flex-center;
  gap: $spacing-xs;
  background: $bg-secondary;
  padding: $spacing-xs;
  border-radius: $border-radius-lg;
  
  .tab-button {
    flex: 1;
    padding: $spacing-md $spacing-xl;
    border: none;
    background: transparent;
    border-radius: $border-radius-md;
    cursor: pointer;
    transition: all $transition-base;
    font-weight: $font-weight-semibold;
    color: $text-secondary;
    
    &.active {
      background: $primary-color;
      color: white;
      transform: translateY(-2px);
      box-shadow: 0 4px 15px rgba($primary-color, 0.3);
    }
    
    &:hover:not(.active) {
      background: rgba($primary-color, 0.1);
      color: $primary-color;
    }
  }
}

// Animation mixins
@mixin fade-in-up($duration: 0.5s, $delay: 0s) {
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp $duration ease forwards;
  animation-delay: $delay;
}

@mixin slide-in-left($duration: 0.5s, $delay: 0s) {
  opacity: 0;
  transform: translateX(-20px);
  animation: slideInLeft $duration ease forwards;
  animation-delay: $delay;
}

@mixin slide-in-right($duration: 0.5s, $delay: 0s) {
  opacity: 0;
  transform: translateX(20px);
  animation: slideInRight $duration ease forwards;
  animation-delay: $delay;
}

@mixin scale-in($duration: 0.3s, $delay: 0s) {
  opacity: 0;
  transform: scale(0.8);
  animation: scaleIn $duration ease forwards;
  animation-delay: $delay;
}
